WSPLOT.
USER,NICK,DLRS2.
*
* CREATE GTERM PLOTTING WORKSPACE FROM SOURCE.
* THIS IS PARTICULARLY OBSCURE EVEN FOR APL, AS WE HAVE TO
* OUTPUT STRANGE LOOKING STRINGS FOR THE GRAPHICS COMMANDS.
* AND USE BATCH REPRESENTATIONS OF APL CHARACTERS.
*
* CREATES THESE GRAPHICS FUNCTIONS:
* GCLR - CLEAR GRAPHICS COMMAND BUFFER.
* GFLS - FLUSH GRAPHICS OUTPUT
* GCOL R G B - SETS DRAWING COLOUR TO 3 ELEMENT VECTOR R G B.
* GFIL - FILL/ERASE THE GRAPHICS PLANE TO THE DRAWING COLOUR.
* GNEW - PREPARE FOR A NEW SET OF PLOTS WITH DEFAULT COLOURS.
* GSQBNS - MODIFY SUBSEQUENT GBNS AND GDBNS SO SQUARES ARE SQUARE WHEN DRAWN.
* GVBNS - LET  SUBSEQUENT GBNS AND GDBNS IGNORE SQUARENESS.
* GBNS XLO YLO XHI YHI - EXPLICITLY SET THE X AND Y AXIS RANGES FOR GRAPH PLOTTING.
* GDBNS XLO YLO XHI YHI - EXPLICITLY SET THE X AND Y AXIS RANGES FOR DRAWING.
* GWID W - SET THE LINE DRAWING WIDTH TO W.
* GMOV X Y - MOVE TO X,Y.
* GDRW X Y - DRAW TO X,Y.
* X GPLOT Y - LINE PLOT Y AGAINST X WITH AUTO RANGING.
* X GPLOTS Y - LINE PLOT Y AGAINST X WITHOUT CHANGING RANGES.
* GTITLE S - PUT A TITLE ON THE GRAPH.
* GTEXT S - DRAW TEXT STRING S.
* GTEXTSZ H - SET TEXT SIZE.
* GTEXTAL A - SET TEXT ALIGNMENT MODE 0=L, 1=C, 2=R, 3=C-DISP.
* GTEXTFN F - SET THE FONT TO USE 0=SERIF, 1=SANS, 2=FIXED.
* GPOINT XY - DRAW A POINT AT X,Y.
* GCIRCLE XYR - DRAW A CIRCLE, CENTER X Y, RADIUS R.
*
* ALSO SOME FUNCTIONS THAT DO NOT DRAW GRAPHICS:
* LINS START END STEPS - STEPS EVENLY SPACED VALUES FROM START TO END.
* 
PURGE,WSPLOT/NA.
APL,TT=BATCH.
~eor

$DL GCLR
$LP CLEAR GRAPHICS PLANE.
'@[0@'
$DL
  
$DL GBNS B
$LP SET GRAPH BOUNDS TO XLO YLO XHI YHI
$GO(($RO B)=4)/OK
'NOT 4 ELEMS'
$GO END
OK:'@[8 ';B;' @'
END:
$DL
  
$DL GDBNS B
$LP SET DRAWING BOUNDS TO XLO YLO XHI YHI
$GO(($RO B)=4)/OK
'NOT 4 ELEMS'
$GO END
OK:'@[7 ';B;' @'
END:
$DL

$DL GSQBNS
$LP MAKE SUBSEQUENT GBNS, GDBNS RESULT IN SQUARES BEING DRAWN SQUARE.
'@[G 1 @'
$DL

$DL GVBNS
$LP LET SUBSEQUENT GBNS, GDBNS IGNORE SQUARENESS.
'@[G 0 @'
$DL

$DL GCOL C
$LP SET DRAWING COLOUR TO R G B
$GO(($RO C)=3)/OK
'NOT 3 ELEMS'
$GO END
OK: '@[1 ';1$MN0$MXC;' @'
END:
$DL
  
$DL GDRW X
$LP DRAW FROM CURRENT POSITION TO X Y
$GO(($RO X)=2)/OK
'NOT 2D'
$GO END
OK: '@[4 ';X;' @'
END:
$DL
  
$DL GFIL
$LP FILL THE GRAPHICS PLANE WITH DRAWING COLOUR.
'@[2@'
$DL
  
$DL GFLS
$LP FLUSH GRAPHICS OUTPUT.
'@[5@'
$DL
  
$DL GMOV X
$LP MOVE FROM CURRENT POSITION TO X Y
$GO(($RO X)=2)/OK
'NOT 2D'
$GO END
OK: '@[3 ';X;' @'
END:
$DL
  
$DL GWID W
$LP SET LINE DRAWING WIDTH
'@[6 ';0.5$MXW;' @'
$DL
  
$DL Z $IS LINS SES
$LP RETURN VECTOR OF LINEARLY SPACED VALUES GIVEN START END STEP
$GO(($RO SES)=3)/OK
'NOT START END STEP'
$GO END
OK:
Z $IS ((SES[2]-SES[1]) $ML ($IO $MN SES[3])-1) $DV (($MN SES[3])-1)
Z $IS Z+SES[1]
END:
$DL

$DL X GPLOT Y
$LP PLOT Y AGAINST X WITH LINES, AUTO RANGE.
N $IS $RO X
$GO (N=($RO Y))/OK
 'X Y NO MATCH'
$GO E1
OK:
GBNS($MN/X),($MN/Y),($MX/X),($MX/Y)
GMOV X[1],Y[1]
I $IS 2
L1:
 $GO (I>N)/E1
 GDRW X[I],Y[I]
 I $IS I+1
 $GO L1
E1: GFLS
$DL

$DL X GPLOTS Y
$LP PLOT Y AGAINST X WITH LINES, SAME RANGE.
N $IS $RO X
$GO (N=($RO Y))/OK
 'X Y NO MATCH'
$GO E1
OK:
GMOV X[1],Y[1]
I $IS 2
L1:
 $GO (I>N)/E1
 GDRW X[I],Y[I]
 I $IS I+1
 $GO L1
E1: GFLS
$DL

$DL GNEW
$LP START A NEW PLOT WITH DEFAULT COLOURS.
GCLR
GCOL 1 1 1
GFIL
GCOL 0 0 0
$DL

$DL GTITLE S
$LP PUT A TITLE ON A PLOT.
'@[E ';S;' @'
$DL

$DL GTEXT S
$LP PLOT TEXT STRING S AT CURRENT POSITION.
'@[9 ';S;' @'
$DL

$DL GTEXTSZ H
$LP SET THE TEXT SIZE IN SOMEWHAT ARBITRARY UNITS (NORMAL=14)
'@[A ';3 $MX H;' @'
$DL

$DL GTEXTAL C
$LP SET TEXT ALIGNMENT MODE 0=L, 1=C, 2=R, 3=C-DISP
'@[B ';3 $MN 0 $MX C;' @'
$DL

$DL GTEXTFN F
$LP SET THE FONT TO USE 0=SERIF, 1=SANS, 2=FIXED.
'@[C ';2 $MN 0 $MX F;' @'
$DL

$DL GPOINT X
$LP DRAW A POINT AT X,Y.
$GO(($RO X)=2)/OK
'NOT 2D'
$GO END
OK: '@[D ';X;' @'
END:
$DL

$DL GCIRCLE X
$LP DRAW A CIRCLE X Y R.
$GO(($RO X)=3)/OK
'NOT X Y R'
$GO END
OK: '@[F ';X;' @'
END:
$DL

$DL GMOVR X
$LP RELATIVE MOVE FROM CURRENT POSITION BY X Y
$GO(($RO X)=2)/OK
'NOT 2D'
$GO END
OK: '@[H ';X;' @'
END:
$DL

$DL GDRWR X
$LP RELATIVE DRAW FROM CURRENT POSITION BY X Y
$GO(($RO X)=2)/OK
'NOT 2D'
$GO END
OK: '@[I ';X;' @'
END:
$DL

)SAVE WSPLOT
~eoi
